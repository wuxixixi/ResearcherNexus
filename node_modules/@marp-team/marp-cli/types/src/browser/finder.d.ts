import type { Browser } from './browser';
export interface BrowserFinderResult {
    path: string;
    acceptedBrowsers: (typeof Browser)[];
}
export interface BrowserFinderOptions {
    preferredPath?: string;
}
export type BrowserFinder = (opts: BrowserFinderOptions) => Promise<BrowserFinderResult>;
export type FinderName = keyof typeof availableFindersMap;
declare const availableFindersMap: {
    readonly chrome: BrowserFinder;
    readonly edge: BrowserFinder;
    readonly firefox: BrowserFinder;
};
export declare const availableFinders: readonly FinderName[];
export declare const defaultFinders: readonly ["chrome", "edge", "firefox"];
export declare const findBrowser: (finders?: readonly FinderName[], opts?: BrowserFinderOptions) => Promise<BrowserFinderResult>;
export {};
