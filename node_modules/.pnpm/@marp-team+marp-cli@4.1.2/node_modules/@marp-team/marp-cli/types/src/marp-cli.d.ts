export interface MarpCLIOptions {
    baseUrl?: string;
    stdin: boolean;
    throwErrorAlways: boolean;
}
export type MarpCLIAPIOptions = Pick<MarpCLIOptions, 'baseUrl'>;
export interface MarpCLICLIOptions {
    debug?: string | boolean;
}
export interface ObservationHelper {
    stop: () => void;
}
export declare const marpCli: (argv: string[], { baseUrl, stdin: defaultStdin, throwErrorAlways }: MarpCLIOptions) => Promise<number>;
export declare const waitForObservation: () => Promise<ObservationHelper>;
export declare const apiInterface: (argv: string[], opts?: MarpCLIAPIOptions) => Promise<number>;
export declare const cliInterface: (argv: string[]) => Promise<number>;
